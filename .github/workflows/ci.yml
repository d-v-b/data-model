name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    - uses: pre-commit/action@v3.0.0

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v5

    - name: Restore global uv cache
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.cache/uv
          ~/.local/share/uv
          .venv
        key: uv-main-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-main-

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.4"
        python-version: "3.13"
        enable-cache: false

    - name: Install dependencies
      run: uv sync --group dev --group test

    - name: Run tests
      run: |
        uv run pytest src/eopf_geozarr/tests/ -v --tb=short -m "not network" --cov=eopf_geozarr --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Save uv caches
      if: steps.cache-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          ~/.cache/uv
          ~/.local/share/uv
          .venv
        key: uv-main-${{ hashFiles('uv.lock') }}

  test-network:
    runs-on: ubuntu-latest
    # Temporarily enabled for PR to verify test fix
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Restore global uv cache
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.cache/uv
          ~/.local/share/uv
          .venv
        key: uv-main-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-main-

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.4"
        python-version: "3.13"
        enable-cache: false

    - name: Install dependencies
      run: uv sync --group dev --group test

    - name: Run network tests
      run: |
        uv run pytest src/eopf_geozarr/tests/ -v --tb=short -m "network"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security checks
      run: |
        bandit -r eopf_geozarr/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
